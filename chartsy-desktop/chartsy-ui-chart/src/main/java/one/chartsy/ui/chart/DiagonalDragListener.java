/* Copyright 2022 Mariusz Bernacki <consulting@didalgo.com>
 * SPDX-License-Identifier: Apache-2.0 */
package one.chartsy.ui.chart;

/**
 * The interface to be implemented by objects interested in listening for events
 * generated by the {@code DiagonalDragInteractor}.
 * 
 * @author Mariusz Bernacki
 *
 */
@FunctionalInterface
public interface DiagonalDragListener {
    
    /**
     * Called by the interactor while the user continues to drag the mouse.
     * <p>
     * The starting and ending points of the current drag gesture, forming an
     * imagined diagonal on the user display, are provided in the specified
     * {@code event} object.
     * 
     * @param event
     *            the ongoing drag event
     */
    void diagonalDragging(DiagonalDragEvent event);
    
    /**
     * Called by the interactor on the drag completion.
     * <p>
     * The starting and ending points of the current drag gesture, forming an
     * imagined diagonal on the user display, are provided in the specified
     * {@code event} object. The default implementation forwards the event to
     * the {@link #diagonalDragging(DiagonalDragEvent)} method.
     * 
     * @param event
     *            the ongoing drag event
     */
    default void diagonalDragged(DiagonalDragEvent event) {
        diagonalDragging(event);
    }
}
